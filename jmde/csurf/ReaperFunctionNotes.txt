http://wiki.cockos.com/wiki/index.php/REAPER_API_Functions

# ----------------------------------------
# Scale selected envelope point positions
# ----------------------------------------

import shlex
from reaper_python import *
from sws_python import *


def get_sel_env_chunk():
    """Return envelope chunk for selected envelope."""
    fs = SNM_CreateFastString("")
    SNM_GetSetObjectState(RPR_GetSelectedTrackEnvelope(0), fs, 0, 0)
    chunk = SNM_GetFastString(fs)
    SNM_DeleteFastString(fs)
    if chunk:
        return chunk
    else:
        RPR_MB("No envelope selected", "", 0)
        return


def set_sel_env_chunk(s):
    """Set envelope chunk for selected envelope."""
    fs = SNM_CreateFastString(s)
    SNM_GetSetObjectState(RPR_GetSelectedTrackEnvelope(0), fs, 1, 0)
    SNM_DeleteFastString(fs)


usr_input = RPR_GetUserInputs("Stretch points position", 1, "multiplier", "", 100)

if usr_input[0]:
    chunk = get_sel_env_chunk()
    head = chunk[:chunk.find("PT") - 1]
    points = chunk[chunk.find("PT"):-3].split("\n")
    stretch = float(usr_input[4])

    for i, point in enumerate(points):
        point = shlex.split(point)
        if len(point) == 6:
            point[1] = float(point[1]) * stretch  # change point position

        new_point = "".join([str(i) + " " for i in point])
        points[i] = new_point + "\n"

    chunk = "%s\n%s>" % (head, "".join(points))
    set_sel_env_chunk(str(chunk))